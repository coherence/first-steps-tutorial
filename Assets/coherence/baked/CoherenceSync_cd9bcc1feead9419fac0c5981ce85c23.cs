// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_4d9a62442a074534bca027258cca3b8c : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_60b57dc105e34765bb249dbf96b35ed4 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_657a7178b5644432a17f5d3f7cebe00e : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_2ffecec9e60b43ea89f0a6e4bd8598b3 : StringBinding
    {   
        private global::TMPro.TextMeshProUGUI CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::TMPro.TextMeshProUGUI)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.String Value
        {
            get { return (System.String)(CastedUnityComponent.text); }
            set { CastedUnityComponent.text = (System.String)(value); }
        }

        protected override (System.String value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066)coherenceComponent).text;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066)coherenceComponent).textSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.text = Value;
            }
            else
            {
                update.text = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.textSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_2783100773886260066();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_2280fcb395a942a1b93a293e112d8673 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).MoveSpeed;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).MoveSpeedSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.MoveSpeed = Value;
            }
            else
            {
                update.MoveSpeed = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MoveSpeedSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_ac5c023b1b544b7ba9b7ce8c808091cc : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).Grounded;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).GroundedSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Grounded = Value;
            }
            else
            {
                update.Grounded = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.GroundedSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_9be70ffe5c844080bcc6320f8619ca6d : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).CarryingBig;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).CarryingBigSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.CarryingBig = Value;
            }
            else
            {
                update.CarryingBig = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.CarryingBigSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_4ee471e890da4553ac8552fed6078db5 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).CarryingSmall;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent).CarryingSmallSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.CarryingSmall = Value;
            }
            else
            {
                update.CarryingSmall = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.CarryingSmallSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_8498588009909292941();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_e1e87976a62a499c9c88381bbdde8ec3 : DeepPositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(CastedUnityComponent.localPosition); }
            set { CastedUnityComponent.localPosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033)coherenceComponent).position;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033)coherenceComponent).positionSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.position = Value;
            }
            else
            {
                update.position = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.positionSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_7791709351172572033();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_792d6900fc744c2f9fb47b533b2dadd6 : DeepRotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(CastedUnityComponent.localRotation); }
            set { CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177)coherenceComponent).rotation;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177)coherenceComponent).rotationSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.rotation = Value;
            }
            else
            {
                update.rotation = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.rotationSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_4582869309862079177();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_1f957f13e6614d8cb60e9dd21aac1f0e : IntBinding
    {   
        private global::Coherence.FirstSteps.CosmeticsChanger CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.FirstSteps.CosmeticsChanger)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.currentSkinTone); }
            set { CastedUnityComponent.currentSkinTone = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentSkinTone;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentSkinToneSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.currentSkinTone = Value;
            }
            else
            {
                update.currentSkinTone = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.currentSkinToneSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_53f5cbf1e41e4a09b431ecff28a28210 : IntBinding
    {   
        private global::Coherence.FirstSteps.CosmeticsChanger CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.FirstSteps.CosmeticsChanger)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.currentHat); }
            set { CastedUnityComponent.currentHat = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentHat;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentHatSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.currentHat = Value;
            }
            else
            {
                update.currentHat = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.currentHatSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_517eec95959b42eab5ded9b1719c2863 : IntBinding
    {   
        private global::Coherence.FirstSteps.CosmeticsChanger CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.FirstSteps.CosmeticsChanger)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.currentHairStyle); }
            set { CastedUnityComponent.currentHairStyle = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentHairStyle;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentHairStyleSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.currentHairStyle = Value;
            }
            else
            {
                update.currentHairStyle = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.currentHairStyleSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_d9dfb8307ef1489f9b046a953ebe6136 : IntBinding
    {   
        private global::Coherence.FirstSteps.CosmeticsChanger CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.FirstSteps.CosmeticsChanger)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.currentFacialHair); }
            set { CastedUnityComponent.currentFacialHair = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentFacialHair;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentFacialHairSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.currentFacialHair = Value;
            }
            else
            {
                update.currentFacialHair = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.currentFacialHairSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_cd9bcc1feead9419fac0c5981ce85c23_575daa01b6414f90938cca4c9616a9a3 : IntBinding
    {   
        private global::Coherence.FirstSteps.CosmeticsChanger CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::Coherence.FirstSteps.CosmeticsChanger)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199);
        public override string CoherenceComponentName => "_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.currentBackpack); }
            set { CastedUnityComponent.currentBackpack = (System.Int32)(value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentBackpack;

            var simFrame = ((_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent).currentBackpackSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.currentBackpack = Value;
            }
            else
            {
                update.currentBackpack = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.currentBackpackSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _cd9bcc1feead9419fac0c5981ce85c23_5911091967807195199();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_cd9bcc1feead9419fac0c5981ce85c23 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_cd9bcc1feead9419fac0c5981ce85c23>();
        
        private global::UnityEngine.Animator _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8_CommandTarget;
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["4d9a62442a074534bca027258cca3b8c"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_4d9a62442a074534bca027258cca3b8c(),
			["60b57dc105e34765bb249dbf96b35ed4"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_60b57dc105e34765bb249dbf96b35ed4(),
			["657a7178b5644432a17f5d3f7cebe00e"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_657a7178b5644432a17f5d3f7cebe00e(),
			["2ffecec9e60b43ea89f0a6e4bd8598b3"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_2ffecec9e60b43ea89f0a6e4bd8598b3(),
			["2280fcb395a942a1b93a293e112d8673"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_2280fcb395a942a1b93a293e112d8673(),
			["ac5c023b1b544b7ba9b7ce8c808091cc"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_ac5c023b1b544b7ba9b7ce8c808091cc(),
			["9be70ffe5c844080bcc6320f8619ca6d"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_9be70ffe5c844080bcc6320f8619ca6d(),
			["4ee471e890da4553ac8552fed6078db5"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_4ee471e890da4553ac8552fed6078db5(),
			["e1e87976a62a499c9c88381bbdde8ec3"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_e1e87976a62a499c9c88381bbdde8ec3(),
			["792d6900fc744c2f9fb47b533b2dadd6"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_792d6900fc744c2f9fb47b533b2dadd6(),
			["1f957f13e6614d8cb60e9dd21aac1f0e"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_1f957f13e6614d8cb60e9dd21aac1f0e(),
			["53f5cbf1e41e4a09b431ecff28a28210"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_53f5cbf1e41e4a09b431ecff28a28210(),
			["517eec95959b42eab5ded9b1719c2863"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_517eec95959b42eab5ded9b1719c2863(),
			["d9dfb8307ef1489f9b046a953ebe6136"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_d9dfb8307ef1489f9b046a953ebe6136(),
			["575daa01b6414f90938cca4c9616a9a3"] = new Binding_cd9bcc1feead9419fac0c5981ce85c23_575daa01b6414f90938cca4c9616a9a3(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_cd9bcc1feead9419fac0c5981ce85c23()
        {
            bakedCommandBindings.Add("d210a4b9ddf7480f974318bf1cd06aa8", BakeCommandBinding__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8);
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        private void BakeCommandBinding__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8_CommandTarget = (global::UnityEngine.Animator)commandBinding.UnityComponent;
            commandsHandler.AddBakedCommand(
            	"UnityEngine.Animator.SetTrigger",
            	"(System.String)",
            	SendCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8,
            	ReceiveLocalCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8,
            	MessageTarget.All,
            	_cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8_CommandTarget,
            	commandBinding.UsesMeta());
        }
        
        private void SendCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(GenericCommandRequestArgs requestArgs)
        {
            var command = new _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;
            command.UsesMeta = requestArgs.UsesMeta;
            command.Target = requestArgs.Target;
            command.Entity = entityId;

            command.name = (System.String)requestArgs.Args[0];

            client.SendCommand(command, requestArgs.ChannelID);
        }
        
        private void ReceiveLocalCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(GenericCommandRequestArgs requestArgs)
        {
            var command = new _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8();
            command.Frame = requestArgs.Frame;
            command.SenderClientID = requestArgs.Sender;

            command.name = (System.String)requestArgs.Args[0];

            ReceiveCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(command);
        }

        private void ReceiveCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(_cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8 command)
        {
            var target = _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8_CommandTarget;
			target.SetTrigger((System.String)(command.name));
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                case _cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8 castedCommand:
                    ReceiveCommand__cd9bcc1feead9419fac0c5981ce85c23_d210a4b9ddf7480f974318bf1cd06aa8(castedCommand);
                    break;
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_cd9bcc1feead9419fac0c5981ce85c23 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_cd9bcc1feead9419fac0c5981ce85c23>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
