// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_20d53524fceab40d5a9ab892525615cb_d34657af_8900_466f_81eb_cda7b52c281f : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			return update.value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}

	public class Binding_20d53524fceab40d5a9ab892525615cb_7711bc2e_3be7_4b03_a706_0692d306fce7 : IntBinding
	{
		private Counter CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (Counter)UnityComponent;
		}
		public override string CoherenceComponentName => "FlowersCounter_id3_Counter_5847726189716557621";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override int Value
		{
			get => (int)(System.Int32)(CastedUnityComponent.count);
			set => CastedUnityComponent.count = (System.Int32)(value);
		}

		protected override int ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (FlowersCounter_id3_Counter_5847726189716557621)coherenceComponent;
			return update.count;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (FlowersCounter_id3_Counter_5847726189716557621)coherenceComponent;
			update.count = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new FlowersCounter_id3_Counter_5847726189716557621();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'FlowersCounter' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncFlowersCounter_id3 : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands		
		private Counter FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b_CommandTarget;		
		private Counter FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8_CommandTarget;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncFlowersCounter_id3>();
			if (coherenceSync.TryGetBindingByGuid("7ce8b858-d007-4d86-8da4-5a67d2d9a68b", "AddOne", out Binding FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b))
			{
				FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b_CommandTarget = (Counter)FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("Counter.AddOne", "()",
				SendCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b, ReceiveLocalCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b, MessageTarget.All, FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (AddOne)");
			}
			if (coherenceSync.TryGetBindingByGuid("2f75e994-88a8-4da2-aebe-765c3648d9d8", "ResetToZero", out Binding FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8))
			{
				FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8_CommandTarget = (Counter)FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("Counter.ResetToZero", "()",
				SendCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8, ReceiveLocalCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8, MessageTarget.All, FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (ResetToZero)");
			}
			if (coherenceSync.TryGetBindingByGuid("d34657af-8900-466f-81eb-cda7b52c281f", "position", out Binding InternalWorldPosition_Translation_value))
			{
				var clone = new Binding_20d53524fceab40d5a9ab892525615cb_d34657af_8900_466f_81eb_cda7b52c281f();
				InternalWorldPosition_Translation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldPosition_Translation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).position");
			}
			if (coherenceSync.TryGetBindingByGuid("7711bc2e-3be7-4b03-a706-0692d306fce7", "count", out Binding InternalFlowersCounter_id3_Counter_5847726189716557621_FlowersCounter_id3_Counter_5847726189716557621_count))
			{
				var clone = new Binding_20d53524fceab40d5a9ab892525615cb_7711bc2e_3be7_4b03_a706_0692d306fce7();
				InternalFlowersCounter_id3_Counter_5847726189716557621_FlowersCounter_id3_Counter_5847726189716557621_count.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalFlowersCounter_id3_Counter_5847726189716557621_FlowersCounter_id3_Counter_5847726189716557621_count)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (Counter).count");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}
		void SendCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b(MessageTarget target, object[] args)
		{
			var command = new FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b(MessageTarget target, object[] args)
		{
			var command = new FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b();
			ReceiveCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b(command);
		}

		void ReceiveCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b(FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b command)
		{
			var target = FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b_CommandTarget;
			target.AddOne();
		}
		void SendCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8(MessageTarget target, object[] args)
		{
			var command = new FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8(MessageTarget target, object[] args)
		{
			var command = new FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8();
			ReceiveCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8(command);
		}

		void ReceiveCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8(FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8 command)
		{
			var target = FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8_CommandTarget;
			target.ResetToZero();
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b castedCommand:
					ReceiveCommand_FlowersCounter_id3_Counter__char_46_AddOne_7ce8b858_d007_4d86_8da4_5a67d2d9a68b(castedCommand);
					break;
				case FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8 castedCommand:
					ReceiveCommand_FlowersCounter_id3_Counter__char_46_ResetToZero_2f75e994_88a8_4da2_aebe_765c3648d9d8(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncFlowersCounter_id3] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
